twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - Elasticsearch
  welcome-message: Hello microservices!
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 1000

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  max-attempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url: http://localhost:8081
  schema-registry-url-key: schema.registry.url
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  number-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  # arranges compression ratio for higher compress/decompress speed
  compression-type: snappy
  # all:wait for ack from all replicas | 1:wait only current broker's ack | 0:no ack
  acks: all
  # default value 16 kb
  batch-size: 16384
  # tune for higher throughput
  batch-size-boost-factor: 100
  # add a delay on producer in case of light load
  linger-ms: 5
  # retry after
  request-timeout-ms: 60000
  retry-count: 5
